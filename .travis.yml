dist: focal

env:
  global:
  # Used for saving generated test datasets. See Notion for details.
  - secure: bP5CEyBsybJUx+iBxZ4XKoMPHd2iMdYVhTNNcVSSPUvLLjmLYVDkbH7b4tD9vN+3i/5pCs+m3sfq0iuQHsP8l7D4VsouB+3jt81gw59o8bpVuTpse0jmagoxsw3TvU3Mu/felE3loBz+BbRkpDCnTZHYn0fAd95Xk3es1iex0zs+fmk4ClYg2yzrtVRw972j0/wMWWXs+Phw2dhB9Mx5fHtm9zV6RoMndBWiq3vwdqGTOoBLoILJ0mQbkMA1SuILPQDN2DtCsBIFTRoH9DI+KUyTzPcvrTUZoMTpVa/09Vpb2cZAhzH9S0++bGs1Ib9m8rrnUyaQk/iJRYxEj9DcCvYpO7TypS13E69CfggCdI5EE5TKs1LBr8wkGMp8ajzh3qMEotF+9QMJkeyqqX5roV/kzB5HV2yqzJSD8aAdHxDw4VYfj312884DDanQh/RXeF8sg5+k8KBx6vjZOhONk5/pzvSR1FTS63+KCI1XHP/kWiDpHg215KekmUQg+SxZUFMqZN+8SL609F+TZqQt5s2uK2Gr/hSCUWY/KmeiLc83PGSSYw59E34CcADBysbJ0lueiPzDybOIAB1hcKHIF5pIANzPCocLmK0axGbp90fN85tcgDCY5axEwJ7s8Uw+h4kTi1HhPfap19I/9EMVrpML+vB+kTSNLFuMVV7keP4=
  - APPLICATION=ops

# Configure the build matrix
matrix:
  include:
  # Validation
  - env: TEST=validation
    php: 8.0
  # PostgreSQL / various PHP
  - env: TEST=pgsql
    dist: bionic
    php: 7.3
  - env: TEST=pgsql LEGACY_SSL=1
    php: 7.4
  - env:
    - TEST: pgsql
    - SAVE_BUILD: true
    - LEGACY_SSL: 1
    php: 8.0
  - env: TEST=pgsql LEGACY_SSL=1
    php: 8.1
  # MySQL / various PHP
  - env: TEST=mysql
    dist: bionic
    php: 7.3
  - env: TEST=mysql LEGACY_SSL=1
    php: 7.4
  - env:
    - TEST: mysql
    - SAVE_BUILD: true
    - LEGACY_SSL: 1
    php: 8.0
  - env: TEST=mysql LEGACY_SSL=1
    php: 8.1
  - env: TEST=mysql LIBONIG_INSTALL=1 LEGACY_SSL=1
    php: 8.2.0
  - env: TEST=pgsql LIBONIG_INSTALL=1 LEGACY_SSL=1
    php: 8.2.0
language: php
python:
  - 3.3 # Required by Javascript linter/builder
git:
  # Inhibit automatic submodule checkout (see below)
  submodules: false
cache:
  npm: true
  directories:
    - $HOME/.composer/cache
    - $HOME/.cache
addons:
  chrome: beta
  postgresql: "9.5"
  apt:
    update: true
    packages:
      - libvulkan1
      - libu2f-udev

before_install:
  - if [ -n "$LIBONIG_INSTALL" ]; then sudo apt-get install libonig5; fi

  # Check out submodules (this script checks out developer forks if necessary)
  - ./tools/startSubmodulesTRAVIS.sh

  # Update to latest stable version of npm
  - npm i g -npm

  - |
    if [[ "$TEST" != "validation" ]]; then
      # Prepare for unit and integration tests.

      # Prepare the server environment
      ./lib/pkp/tools/travis/prepare-webserver.sh

      # Prepare the local codebase
      ./lib/pkp/tools/travis/install-composer-dependencies.sh
      if [ -n "$LEGACY_SSL" ]; then NODE_OPTIONS=--openssl-legacy-provider npm install && NODE_OPTIONS=--openssl-legacy-provider npm run build; else npm install && npm run build; fi
    else
      # Prepare for validation tests.
      npm install
      ./lib/pkp/tools/travis/install-linter.sh
    fi

script:
  - |
    if [[ "$TEST" != "validation" ]]; then
      # Run the unit and integration tests.
      source ./lib/pkp/tools/travis/prepare-tests.sh
      ./lib/pkp/tools/travis/run-tests.sh
    else
      # Run the validation tests.
      ./lib/pkp/tools/travis/validate-xml.sh
      ./lib/pkp/tools/buildjs.sh -n
      ./lib/pkp/tools/checkHelp.sh
      ./lib/pkp/tools/travis/validate-json.sh
      npm run lint
    fi

after_script:
  - cat error.log

after_failure:
  - sudo apt-get install sharutils
  # Outputs only the oldest file found at the screenshots folder due to log limits
  - find cypress/screenshots -type f -printf '%T+\t%p\n' | sort | head -n 1 | cut -f 2 | tar -czT - | uuencode /dev/stdout
